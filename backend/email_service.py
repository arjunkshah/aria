import smtplib
import ssl
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from email.mime.base import MIMEBase
from email import encoders
import os
from datetime import datetime
from typing import List, Optional
import asyncio
import threading

class EmailService:
    def __init__(self):
        self.smtp_server = os.getenv("SMTP_SERVER", "smtp.gmail.com")
        self.smtp_port = int(os.getenv("SMTP_PORT", "587"))
        self.sender_email = os.getenv("SENDER_EMAIL", "")
        self.sender_password = os.getenv("SENDER_PASSWORD", "")
        self.enabled = bool(self.sender_email and self.sender_password)
        
        if not self.enabled:
            print("‚ö†Ô∏è  Email service not configured. Set SENDER_EMAIL and SENDER_PASSWORD environment variables.")
    
    def send_email(self, to_email: str, subject: str, body: str, html_body: Optional[str] = None) -> bool:
        """Send an email notification"""
        if not self.enabled:
            print(f"üìß Email not sent (service disabled): {subject}")
            return False
        
        try:
            # Create message
            msg = MIMEMultipart('alternative')
            msg['From'] = self.sender_email
            msg['To'] = to_email
            msg['Subject'] = subject
            
            # Add text and HTML parts
            text_part = MIMEText(body, 'plain')
            msg.attach(text_part)
            
            if html_body:
                html_part = MIMEText(html_body, 'html')
                msg.attach(html_part)
            
            # Create SMTP session
            context = ssl.create_default_context()
            with smtplib.SMTP(self.smtp_server, self.smtp_port) as server:
                server.starttls(context=context)
                server.login(self.sender_email, self.sender_password)
                server.send_message(msg)
            
            print(f"üìß Email sent successfully to {to_email}: {subject}")
            return True
            
        except Exception as e:
            print(f"‚ùå Failed to send email to {to_email}: {str(e)}")
            return False
    
    def send_changelog_notification(self, to_email: str, repo_name: str, version: str, changes: List[str], pr_count: int) -> bool:
        """Send a changelog notification email"""
        subject = f"üöÄ New Changelog Generated: {version} for {repo_name}"
        
        # Create HTML body
        html_body = f"""
        <html>
        <head>
            <style>
                body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; }}
                .header {{ background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; border-radius: 8px; }}
                .content {{ padding: 20px; background: #f9f9f9; border-radius: 8px; margin: 20px 0; }}
                .changes {{ background: white; padding: 15px; border-radius: 5px; margin: 10px 0; }}
                .change-item {{ margin: 5px 0; padding: 5px 0; border-bottom: 1px solid #eee; }}
                .footer {{ text-align: center; color: #666; font-size: 12px; margin-top: 20px; }}
                .badge {{ background: #28a745; color: white; padding: 4px 8px; border-radius: 12px; font-size: 12px; }}
            </style>
        </head>
        <body>
            <div class="header">
                <h1>üöÄ ARIA Auto-Generated Changelog</h1>
                <p>Your repository has been updated with new changes!</p>
            </div>
            
            <div class="content">
                <h2>Repository: <strong>{repo_name}</strong></h2>
                <p><span class="badge">Version {version}</span></p>
                <p>Generated on: {datetime.now().strftime('%B %d, %Y at %I:%M %p')}</p>
                <p>Changes detected: <strong>{pr_count} pull request(s)</strong></p>
                
                <h3>üìù Changes:</h3>
                <div class="changes">
        """
        
        for change in changes:
            html_body += f'<div class="change-item">‚Ä¢ {change}</div>'
        
        html_body += f"""
                </div>
                
                <p><em>This changelog was automatically generated by ARIA when pull requests were merged.</em></p>
            </div>
            
            <div class="footer">
                <p>Powered by ARIA - AI Changelog Companion</p>
                <p>Generated on {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}</p>
            </div>
        </body>
        </html>
        """
        
        # Create text body
        text_body = f"""
ARIA Auto-Generated Changelog

Repository: {repo_name}
Version: {version}
Generated: {datetime.now().strftime('%B %d, %Y at %I:%M %p')}
Changes: {pr_count} pull request(s)

Changes:
{chr(10).join([f"‚Ä¢ {change}" for change in changes])}

This changelog was automatically generated by ARIA when pull requests were merged.

---
Powered by ARIA - AI Changelog Companion
        """
        
        return self.send_email(to_email, subject, text_body, html_body)
    
    def send_project_notification(self, to_email: str, project_name: str, repo_name: str, action: str) -> bool:
        """Send a project-related notification email"""
        subject = f"üîî ARIA Project Update: {action}"
        
        html_body = f"""
        <html>
        <head>
            <style>
                body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; }}
                .header {{ background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; border-radius: 8px; }}
                .content {{ padding: 20px; background: #f9f9f9; border-radius: 8px; margin: 20px 0; }}
                .info {{ background: white; padding: 15px; border-radius: 5px; margin: 10px 0; }}
                .footer {{ text-align: center; color: #666; font-size: 12px; margin-top: 20px; }}
            </style>
        </head>
        <body>
            <div class="header">
                <h1>üîî ARIA Project Update</h1>
                <p>Your project has been updated!</p>
            </div>
            
            <div class="content">
                <h2>Project: <strong>{project_name}</strong></h2>
                <div class="info">
                    <p><strong>Action:</strong> {action}</p>
                    <p><strong>Repository:</strong> {repo_name}</p>
                    <p><strong>Time:</strong> {datetime.now().strftime('%B %d, %Y at %I:%M %p')}</p>
                </div>
                
                <p>Your ARIA project has been successfully updated. You can view the changes in your ARIA dashboard.</p>
            </div>
            
            <div class="footer">
                <p>Powered by ARIA - AI Changelog Companion</p>
                <p>Generated on {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}</p>
            </div>
        </body>
        </html>
        """
        
        text_body = f"""
ARIA Project Update

Project: {project_name}
Action: {action}
Repository: {repo_name}
Time: {datetime.now().strftime('%B %d, %Y at %I:%M %p')}

Your ARIA project has been successfully updated. You can view the changes in your ARIA dashboard.

---
Powered by ARIA - AI Changelog Companion
        """
        
        return self.send_email(to_email, subject, text_body, html_body)
    
    def send_error_notification(self, to_email: str, error_message: str, project_name: str = "Unknown") -> bool:
        """Send an error notification email"""
        subject = f"‚ö†Ô∏è ARIA Error Alert: {project_name}"
        
        html_body = f"""
        <html>
        <head>
            <style>
                body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; }}
                .header {{ background: linear-gradient(135deg, #dc3545 0%, #c82333 100%); color: white; padding: 20px; border-radius: 8px; }}
                .content {{ padding: 20px; background: #f9f9f9; border-radius: 8px; margin: 20px 0; }}
                .error {{ background: #f8d7da; color: #721c24; padding: 15px; border-radius: 5px; margin: 10px 0; border: 1px solid #f5c6cb; }}
                .footer {{ text-align: center; color: #666; font-size: 12px; margin-top: 20px; }}
            </style>
        </head>
        <body>
            <div class="header">
                <h1>‚ö†Ô∏è ARIA Error Alert</h1>
                <p>An error occurred in your ARIA project</p>
            </div>
            
            <div class="content">
                <h2>Project: <strong>{project_name}</strong></h2>
                <div class="error">
                    <p><strong>Error:</strong></p>
                    <p>{error_message}</p>
                </div>
                
                <p>Please check your ARIA dashboard for more details and ensure your configuration is correct.</p>
            </div>
            
            <div class="footer">
                <p>Powered by ARIA - AI Changelog Companion</p>
                <p>Generated on {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}</p>
            </div>
        </body>
        </html>
        """
        
        text_body = f"""
ARIA Error Alert

Project: {project_name}
Error: {error_message}

Please check your ARIA dashboard for more details and ensure your configuration is correct.

---
Powered by ARIA - AI Changelog Companion
        """
        
        return self.send_email(to_email, subject, text_body, html_body)

# Global email service instance
email_service = EmailService() 